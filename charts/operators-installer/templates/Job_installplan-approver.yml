{{- range .Values.operators }}
{{- if eq .installPlanApproval "Manual" }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: installplan-approver--{{ .name }}
  labels:
    {{- include "operators-installer.labels" $ | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "0"
spec:
  completions: 1
  backoffLimit: 5
  parallelism: 1
  activeDeadlineSeconds: 30
  template:
    spec:
      containers:
      - name: installplan-approver
        image: {{ $.Values.installPlanApproverAndVerifyJobsImage }}
        command:
          - /bin/bash
          - -c
          - |
            export HOME=/tmp/approver

            echo
            echo "Get Subscription (${SUBSCRIPTION}) UID"
            subscriptionUID=$(oc get subscriptions.operators.coreos.com --field-selector metadata.name=${SUBSCRIPTION} -o=jsonpath="{.items[0].metadata.uid}")
            echo "Subscription (${SUBSCRIPTION}) UID: ${subscriptionUID}"
            if [ ! -z "subscriptionUID" ]; then
              # this complicated go-template finds an InstallPlan where both the .spec.clusterServiceVersionNames contains the expected CSV
              # and .metadata.ownerReferences contains the expected Subscription owner. JsonPath doesn't let you do and statements and go-templates
              # dont seem to have a funciton for checking if a value is in an array without iterating. so here we are.
              # NOTE: this is nested in {{` `}} so that helm doesnt try to interpriate the go template
              {{`installPlanGoTemplate=$(cat << EOF
              {{- range .items -}}
                {{- \$installPlanItem := . -}}
                {{- range .spec.clusterServiceVersionNames -}}
                  {{- if eq . "${SUBSCRIPTION_CSV}" -}}
                    {{- range \$installPlanItem.metadata.ownerReferences -}}
                      {{- if eq .uid "${subscriptionUID}" -}}
                        {{\$installPlanItem.metadata.name}}
                      {{- end -}}
                    {{- end -}}
                  {{- end -}}
                {{- end -}}
              {{- end -}}
            EOF
              )`}}

              echo
              echo "Get InstallPlan for CSV (${SUBSCRIPTION_CSV}) with Subscription (${SUBSCRIPTION_CSV}) (${subscriptionUID}) owner"
              installPlan=$(oc get installplan -o=go-template="${installPlanGoTemplate}")
              echo "InstallPlan for CSV (${SUBSCRIPTION_CSV}) with Subscription (${SUBSCRIPTION_CSV}) (${subscriptionUID}) owner: ${installPlan}"
              if [ ! -z "${installPlan}" ]; then
                echo
                echo "Check InstallPlan (${installPlan}) approval"
                installPlanApproved=$(oc get installplan ${installPlan} -o=jsonpath="{.spec.approved}")
                if [ "${installPlanApproved}" == "false" ]; then
                  echo "Approving InstallPlan (${installPlan})"
                  oc patch installplan ${installPlan} --type=json -p='[{"op":"replace","path": "/spec/approved", "value": true}]'
                else
                  echo "InstallPlan (${installPlan})already approved"
                fi
                exit 0
              else
                echo
                echo "Could not find InstallPlan for CSV (${SUBSCRIPTION_CSV}) with Subscription (${SUBSCRIPTION_CSV}) (${subscriptionUID}) owner. This can happen if InstallPlan isn't created yet. Try again."
                exit 1
              fi
            else
              echo
              echo "Failed to get Subscription ($SUBSCRIPTION) UID. This really shouldn't happen."
              exit 1
            fi
        imagePullPolicy: Always
        env:
        - name: SUBSCRIPTION_CSV
          value: {{ .csv }}
        - name: SUBSCRIPTION
          value: {{ .name }}
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccount: installplan-approver
      serviceAccountName: installplan-approver
      terminationGracePeriodSeconds: 30
{{- end }}
{{- end }}